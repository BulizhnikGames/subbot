// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: channels.sql

package orm

import (
	"context"
)

const addChannel = `-- name: AddChannel :one
INSERT INTO channels(id, hash, username, stored_at)
VALUES($1, $2, $3, $4)
RETURNING id, hash, username, stored_at
`

type AddChannelParams struct {
	ID       int64
	Hash     int64
	Username string
	StoredAt int64
}

func (q *Queries) AddChannel(ctx context.Context, arg AddChannelParams) (Channel, error) {
	row := q.db.QueryRowContext(ctx, addChannel,
		arg.ID,
		arg.Hash,
		arg.Username,
		arg.StoredAt,
	)
	var i Channel
	err := row.Scan(
		&i.ID,
		&i.Hash,
		&i.Username,
		&i.StoredAt,
	)
	return i, err
}

const deleteChannel = `-- name: DeleteChannel :exec
DELETE FROM channels
WHERE id = $1
`

func (q *Queries) DeleteChannel(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteChannel, id)
	return err
}
